//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace FiftyOne.IpIntelligence.Engine.OnPremise.Interop {

internal class ComponentMetaDataCollectionSwig : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ComponentMetaDataCollectionSwig(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ComponentMetaDataCollectionSwig obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ComponentMetaDataCollectionSwig() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          IpIntelligenceEngineModulePINVOKE.delete_ComponentMetaDataCollectionSwig(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public ComponentMetaDataSwig getByKey(SWIGTYPE_p_byte key) {
    global::System.IntPtr cPtr = IpIntelligenceEngineModulePINVOKE.ComponentMetaDataCollectionSwig_getByKey(swigCPtr, SWIGTYPE_p_byte.getCPtr(key));
    ComponentMetaDataSwig ret = (cPtr == global::System.IntPtr.Zero) ? null : new ComponentMetaDataSwig(cPtr, true);
    if (IpIntelligenceEngineModulePINVOKE.SWIGPendingException.Pending) throw IpIntelligenceEngineModulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ComponentMetaDataSwig getByIndex(uint index) {
    global::System.IntPtr cPtr = IpIntelligenceEngineModulePINVOKE.ComponentMetaDataCollectionSwig_getByIndex(swigCPtr, index);
    ComponentMetaDataSwig ret = (cPtr == global::System.IntPtr.Zero) ? null : new ComponentMetaDataSwig(cPtr, true);
    if (IpIntelligenceEngineModulePINVOKE.SWIGPendingException.Pending) throw IpIntelligenceEngineModulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint getSize() {
    uint ret = IpIntelligenceEngineModulePINVOKE.ComponentMetaDataCollectionSwig_getSize(swigCPtr);
    if (IpIntelligenceEngineModulePINVOKE.SWIGPendingException.Pending) throw IpIntelligenceEngineModulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}

}
