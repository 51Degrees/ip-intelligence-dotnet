@using FiftyOne.Pipeline.Core.Data.Types

@model FiftyOne.IpIntelligence.IIpData
@{
    ViewData["Title"] = "IP Intelligence example";
    var rangeStart = Model.IpRangeStart;
    var rangeEnd = Model.IpRangeEnd;
    var countryCodes = Model.CountryCode;
    var cities = Model.CityName;
    var averageLocation = Model.AverageLocation;
    var locationBoundNorthWest = Model.LocationBoundNorthWest;
    var locationBoundSouthEast = Model.LocationBoundSouthEast;
}

<h2>Example</h2>

<div id="content">
    <p>
        The following values are determined by sever-side IP intelligence 
        on the first request:
    </p>
    <p>
        RangeStart: @(rangeStart.HasValue ? rangeStart.Value.ToString() : $"Unknown ({rangeStart.NoValueMessage})")<br />
        RangeEnd: @(rangeEnd.HasValue ? rangeEnd.Value.ToString() : $"Unknown ({rangeEnd.NoValueMessage})")<br />
        CountryCodes:
        @if (countryCodes.HasValue)
        {
            <ol>
                @foreach (WeightedValue<string> country in countryCodes.Value)
                {
                    <li>@country.Value, @country.Weight</li>
                }
            </ol>
        }
        Cities:
        @if (cities.HasValue)
        {
            <ol>
                @foreach (WeightedValue<string> city in cities.Value)
                {
                    <li>@city.Value, @city.Weight</li>
                }
            </ol>
        }
        AverageLocation: @(averageLocation.HasValue ? averageLocation.Value.ToString() : $"Unknown ({averageLocation.NoValueMessage})")<br />
        LocationBoundNorthWest: @(locationBoundNorthWest.HasValue ? locationBoundNorthWest.Value.ToString() : $"Unknown ({locationBoundNorthWest.NoValueMessage})")<br />
        LocationBoundSouthEast: @(locationBoundSouthEast.HasValue ? locationBoundSouthEast.Value.ToString() : $"Unknown ({locationBoundSouthEast.NoValueMessage})")<br />
    </p>
</div>

@await Component.InvokeAsync("FiftyOneJS")