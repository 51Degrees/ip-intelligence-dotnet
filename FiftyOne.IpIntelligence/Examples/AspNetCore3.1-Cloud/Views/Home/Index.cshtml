@using FiftyOne.IpIntelligence.Shared.Data;
@using FiftyOne.Pipeline.Core.Data;
@using System.Collections.Generic;

@model FiftyOne.IpIntelligence.IIpIntelligenceData
@{
    ViewData["Title"] = "IP Intelligence example";
    var values = new Dictionary<string, FiftyOne.Pipeline.Engines.Data.IAspectPropertyValue<IReadOnlyList<IWeightedValue<string>>>>();
    values.Add("rangeStart", Model.IpRangeStart);
    values.Add("rangeEnd", Model.IpRangeEnd);
    values.Add("countryCodes", Model.CountryCode);
    values.Add("country", Model.Country);
    values.Add("region", Model.Region);
    values.Add("state", Model.State);
    values.Add("town", Model.Town);
}

<h2>Example</h2>

<div id="content">
    <p>
        The following values are determined by sever-side IP intelligence 
        on the first request:
    </p>
    <p>
        @foreach (var nextPropertyValues in values) {
            @nextPropertyValues.Key
            @if(nextPropertyValues.Value.HasValue)
            {
                <ol>
                    @foreach (IWeightedValue<string> nextValue in nextPropertyValues.Value.Value)
                    {
                        <li>@nextValue.Value, @nextValue.Weighting()</li>
                    }
                </ol>
            }
        }
    </p>
</div>

@await Component.InvokeAsync("FiftyOneJS")